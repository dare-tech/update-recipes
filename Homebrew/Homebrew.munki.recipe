<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Description</key>
    <string>Downloads the latest Homebrew package version from GitHub and import into Munki.</string>
    <key>Identifier</key>
    <string>com.github.dare-tech.munki.Homebrew</string>
    <key>Input</key>
    <dict>
        <key>NAME</key>
        <string>Homebrew</string>
        <key>MUNKI_REPO_SUBDIR</key>
        <string>apps/Homebrew</string>
        <key>pkginfo</key>
        <dict>
            <key>catalogs</key>
            <array>
                <string>testing</string>
            </array>
            <key>category</key>
            <string>Developer</string>
            <key>description</key>
            <string>The missing package manager for macOS.</string>
            <key>developer</key>
            <string>Mike McQuaid</string>
            <key>display_name</key>
            <string>%NAME%</string>
            <key>name</key>
            <string>%NAME%</string>
            <key>preinstall_script</key>
			<string>#!/bin/zsh

echo "Checking Command Line Tools for Xcode"

xcode-select -p &amp;&gt; /dev/null
if [ $? -ne 0 ]; then
	echo "Command Line Tools for Xcode not found. Installing from softwareupdateâ€¦"
	touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
	PROD=$(softwareupdate -l | grep "\*.*Command Line" | tail -n 1 | sed 's/^[^C]* //')
	softwareupdate -i "$PROD" --verbose;
else
	echo "Command Line Tools for Xcode have been installed. Checking if the latest version is installed..."
	touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
	installedCLI=$(pkgutil --pkg-info=com.apple.pkg.CLTools_Executables | grep "version:" | tail -n 1 | sed 's/version: //g'| awk -F'.' '{print $1 "." $2}')
	PROD=$(softwareupdate -l | grep "\*.*Command Line" | tail -n 1 | sed 's/^[^C]* //')
	latestCLI=$(echo "$PROD" | sed 's/Command Line Tools for Xcode-//g')
	if [[ "$installedCLI" != "$latestCLI" ]]; then
		echo "Command Line Tools for Xcode needs to be updated. Installed - $installedCLI, Available - $latestCLI. Please wait..."
		softwareupdate -i "$PROD" --verbose;
	else
		echo "Command Line Tools for Xcode is up to date. Installed version: $installedCLI"
	fi
fi
            </string>
            <key>unattended_install</key>
            <true/>
            <key>unattended_uninstall</key>
            <true/>
        </dict>
    </dict>
    <key>MinimumVersion</key>
    <string>0.4.3</string>
    <key>ParentRecipe</key>
    <string>com.github.dare-tech.download.Homebrew</string>
    <key>Process</key>
    <array>
    	<dict>
            <key>Arguments</key>
            <dict>
                <key>additional_pkginfo</key>
                <dict>
                    <key>installcheck_script</key>
                    <string>#!/bin/zsh
installed=1
not_installed=0
target_version="%version%"

if [[ $(uname -m) == "x86_64" ]]; then
brew="/usr/local/Homebrew/bin/brew"
else
brew="/opt/homebrew/bin/brew"
fi

if [[ ! -f "$brew" ]]; then
exit "$not_installed"
fi

current_version=$($brew --version | /usr/bin/head -n 1 | /usr/bin/awk '{ print $2 }')

if [[ "$current_version" != "$target_version" ]]; then
  exit "$not_installed"
elif [[ "$current_version" == "$target_version" ]]; then
  exit "$installed"
else
  exit "$not_installed"
fi
  					</string>
                </dict>
            </dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiImporter</string>
            <key>Arguments</key>
            <dict>
                <key>pkg_path</key>
                <string>%pathname%</string>
                <key>repo_subdirectory</key>
                <string>%MUNKI_REPO_SUBDIR%</string>
            </dict>
        </dict>
    </array>
</dict>
</plist>
